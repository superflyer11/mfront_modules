@DSL Implicit;
@Behaviour vM;
@Author Eric Simo;
@Date 07 / 03 / 2022;
@Description {
  An implicit implementation of the von Mises model.

      The yield surface is defined by : "\["
                                        "  f(\sigmaeq,p) = \sigmaeq-s_{0}-H\,p"
                                        "\]"
}

// integration information
@Algorithm NewtonRaphson_NumericalJacobian;
@Brick StandardElasticity;
@Theta 1.0;
@Epsilon 1e-16;
@PerturbationValueForNumericalJacobianComputation 1.e-8;
@ModellingHypotheses{".+"};

@MaterialProperty stress s0;
s0.setGlossaryName("YieldStress");
@MaterialProperty stress H;
H.setEntryName("HardeningSlope");

@StateVariable strain p; 
p.setGlossaryName("EquivalentPlasticStrain");
@AuxiliaryStateVariable StrainStensor epl;
epl.setGlossaryName("PlasticStrain");

@LocalVariable bool integration;

// elastic predictor and verification of the yield criterion
@InitLocalVariables {
  // elastic preditor
  const auto sigel = computeElasticPrediction();
  const auto q = sigmaeq(sigel); 
  const auto f = q - s0 - H * p;
  integration = f > 0;
}

@Integrator {

  if (integration) {
    const auto seq = sigmaeq(sig);
    const auto seps = strain(1.e-12) * young;
    const auto iseq = 1 / max(seq, seps); 

    const auto df_dsig = 3 * deviator(sig) * (iseq / 2);
    feel += dp * df_dsig;
    fp = (seq - s0 - H * (p + theta * dp)) / young;
  }
}

@UpdateAuxiliaryStateVariables
{
  epl += deto-deel;
}